{"version":3,"sources":["components/PokemonCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Container/index.js","components/Footer/index.js","App.js","index.js"],"names":["PokemonCard","props","className","alt","name","src","image","onClick","pokemonClick","id","Wrapper","children","Title","Container","Footer","href","target","class","score","topScore","message","App","state","pokemons","pokemonMatch","filter","pokemon","clicked","i","length","setState","sort","a","b","Math","random","this","map","pokemonID","key","Component","ReactDOM","render","document","getElementById"],"mappings":"mrCAiBeA,MAdf,SAAqBC,GACnB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,MAAOC,QAAS,kBAAMN,EAAMO,aAAaP,EAAMQ,KAAKP,UAAU,cAEjG,yBAAKA,UAAU,c,MCFNQ,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,MCU1BC,MAXf,SAAeX,GAGX,OAAO,yBAAKC,UAAU,aAAY,wBAAIA,UAAU,SAAUD,EAAMU,SAA9B,KAA3B,IACP,wBAAIT,UAAU,YACV,uBAAGA,UAAU,gB,wBCCNW,MANf,SAAmBZ,GACf,OAAO,yBAAKC,UAAU,aAClB,yBAAKA,UAAU,SADZ,IACuBD,EAAMU,W,aCWzBG,MAbf,SAAgBb,GAGZ,OAAO,qCAAKC,UAAU,aAAf,YAAqC,0BAExC,uBAAGa,KAAK,+BACJC,OAAO,UACP,uBAAGC,MAAM,uBAFb,oBAEwDhB,EAAMU,YCGlEO,EAAQ,EACRC,EAAW,EACXC,EAAU,2EA+HCC,E,2MA3HbC,MAAQ,CACNC,WACAL,MAAO,EACPC,SAAU,EACVC,W,EAGFZ,aAAe,SAAAC,GAGb,IAAMc,EAAW,EAAKD,MAAMC,SAGtBC,EAAeD,EAASE,QAAO,SAAAC,GAAO,OAAIA,EAAQjB,KAAOA,KAI/D,GAAIe,EAAa,GAAGG,QAAS,CAG3BT,EAAQ,EACRE,EAAU,gEAGV,IAAK,IAAIQ,EAAI,EAAGA,EAAIL,EAASM,OAAQD,IACnCL,EAASK,GAAGD,SAAU,EAGxB,EAAKG,SAAS,CAAEV,YAChB,EAAKU,SAAS,CAAEZ,UAChB,EAAKY,SAAS,CAAEP,kBAGX,GAAIL,EAAQ,GAGjBM,EAAa,GAAGG,SAAU,EAG1BT,IAGAE,EAAU,wDAENF,EAAQC,IACVA,EAAWD,EACX,EAAKY,SAAS,CAAEX,cAIlBI,EAASQ,MAAK,SAAUC,EAAGC,GAAK,MAAO,GAAMC,KAAKC,YAGlD,EAAKL,SAAS,CAAEP,aAChB,EAAKO,SAAS,CAAEZ,UAChB,EAAKY,SAAS,CAAEV,gBACX,CAGLI,EAAa,GAAGG,SAAU,EAG1BT,EAAQ,EAGRE,EAAU,uEACVD,EAAW,GACX,EAAKW,SAAS,CAAEX,aAEhB,IAAK,IAAIS,EAAI,EAAGA,EAAIL,EAASM,OAAQD,IACnCL,EAASK,GAAGD,SAAU,EAIxBJ,EAASQ,MAAK,SAAUC,EAAGC,GAAK,MAAO,GAAMC,KAAKC,YAGlD,EAAKL,SAAS,CAAEP,aAChB,EAAKO,SAAS,CAAEZ,UAChB,EAAKY,SAAS,CAAEV,c,wEAkBV,IAAD,OACP,OAEE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,wCACE,wBAAIlB,UAAU,WAAd,IAA0BkC,KAAKd,MAAMF,SACrC,uBAAGlB,UAAU,aAAb,eAAsCkC,KAAKd,MAAMJ,MAAjD,iBAAsEkB,KAAKd,MAAMH,WAElFiB,KAAKd,MAAMC,SAASc,KAAI,SAAAX,GAAO,OAC9B,kBAAC,EAAD,CACEY,UAAW,EAAKA,UAChB9B,aAAc,EAAKA,aACnBC,GAAIiB,EAAQjB,GACZ8B,IAAKb,EAAQjB,GACbH,MAAOoB,EAAQpB,WAInB,kBAAC,EAAD,W,GAtHUkC,a,MCXlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8c68b6a1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction PokemonCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} onClick={() => props.pokemonClick(props.id)} className=\"addScore\" />\n      </div>\n      <div className=\"content\">\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default PokemonCard;\n\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n\r\n\r\n    return <div className=\"col-md-12\"><h1 className=\"title\" >{props.children} </h1>;\r\n    <h2 className=\"message\"></h2>\r\n        <p className=\"card-text\"></p>\r\n    </div>\r\n\r\n\r\n}\r\n\r\nexport default Title;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Container(props) {\r\n    return <div className=\"container\" >\r\n        <img className=\"logo\" /> {props.children}\r\n    </div>;\r\n}\r\n\r\nexport default Container;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Footer(props) {\r\n\r\n\r\n    return <div className=\"col-md-12\" className=\"card-footer text-muted\">\r\n        {/* <h1 className=\"title\" >{props.children} </h1>; */}\r\n        <a href=\"https://github.com/Karlelisa\"\r\n            target=\"_blank\">\r\n            <i class=\"fab fa-github mr-2\"></i>Karlelisa Wesley {props.children}\r\n        </a>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Footer;","// Cited Class Activity: https://harvard.bootcampcontent.com/Harvard-Coding-Boot-Camp/hu-cam-fsf-pt-09-2019-u-c/tree/master/Week_19/01-Activities/29-Stu_FriendRefactor\n\nimport React, { Component } from \"react\";\nimport PokemonCard from \"./components/PokemonCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport pokemons from \"./pokemons.json\";\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from \"./components/Container\";\nimport Footer from \"./components/Footer\";\n\n\nlet score = 0;\nlet topScore = 0;\nlet message = \"Click on a Pokemon for points! Click on the same one twice and you lose!\";\n\nclass App extends Component {\n  // Setting this.state.pokemons to the pokemons json array\n  state = {\n    pokemons,\n    score: 0,\n    topScore: 0,\n    message\n  };\n\n  pokemonClick = id => {\n\n    // Make a copy of the state pokemons array to work with\n    const pokemons = this.state.pokemons;\n\n    // Filter for the clicked pokemons\n    const pokemonMatch = pokemons.filter(pokemon => pokemon.id === id);\n\n    // If the pokemonMatch image's clicked value is already true, \n    // do the game over actions\n    if (pokemonMatch[0].clicked) {\n\n\n      score = 0;\n      message = \"Ah! Sorry you already clicked that one. Game Over! Try again!\"\n\n\n      for (let i = 0; i < pokemons.length; i++) {\n        pokemons[i].clicked = false;\n      }\n\n      this.setState({ message });\n      this.setState({ score });\n      this.setState({ pokemons });\n\n      // Otherwise, if clicked = false, and the user hasn't finished\n    } else if (score < 11) {\n\n      // Set its value to true\n      pokemonMatch[0].clicked = true;\n\n      // increment the appropriate counter\n      score++;\n      // this.setState({ score: this.state.score + 1 });\n\n      message = \"Great! You haven't click on that one yet! Keep going!\";\n\n      if (score > topScore) {\n        topScore = score;\n        this.setState({ topScore });\n      }\n\n      // When a Pokemon Card is clicked, shuffle the Pokemon array in a random order\n      pokemons.sort(function (a, b) { return 0.5 - Math.random() });\n\n      // Set this.state.pokemons equal to the new pokemons array\n      this.setState({ pokemons });\n      this.setState({ score });\n      this.setState({ message });\n    } else {\n\n      // Set its value to true\n      pokemonMatch[0].clicked = true;\n\n      // restart the score counter\n      score = 0;\n\n      // play again\n      message = \"Yay!!! You got ALL of them!!! Now, let's see if you can do it again!\";\n      topScore = 12;\n      this.setState({ topScore });\n\n      for (let i = 0; i < pokemons.length; i++) {\n        pokemons[i].clicked = false;\n      }\n\n      // When a Pokemon Card is clicked, shuffle the Pokemon array in a random order\n      pokemons.sort(function (a, b) { return 0.5 - Math.random() });\n\n      // Set this.state.pokemons equal to the new pokemons array\n      this.setState({ pokemons });\n      this.setState({ score });\n      this.setState({ message });\n\n    }\n  };\n\n\n  // pokemonClick = () => {\n  //   // We always use the setState method to update a component's state\n  //   this.setState({ score: this.state.score + 1 });\n\n  //   // When a Pokemon Card is clicked, shuffle all the Pokemon cards in a random order\n  //   this.state.pokemons.sort(() => Math.random() - 0.5)\n\n  // };\n\n\n\n  // Map over this.state.pokemons and render a pokemonCard component for each pokemon object\n  render() {\n    return (\n\n      <Wrapper>\n        <Container></Container>\n        <Title>Pokemon - Gotta \"Click\" Them All\n          <h2 className=\"message\"> {this.state.message}</h2>\n          <p className=\"card-text\">Your Score: {this.state.score} | Top Score: {this.state.topScore}</p>\n        </Title>\n        {this.state.pokemons.map(pokemon => (\n          <PokemonCard\n            pokemonID={this.pokemonID}\n            pokemonClick={this.pokemonClick}\n            id={pokemon.id}\n            key={pokemon.id}\n            image={pokemon.image}\n\n          />\n        ))}\n        <Footer></Footer>\n      </Wrapper>\n    );\n  }\n}\n\n\nexport default App;\n\n\n\n\n\n\n\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}